package com.mkyong;

import org.apache.log4j.Logger;

public class HelloExample {

	final static Logger logger = Logger.getLogger(HelloExample.class);

	public static void main(String[] args) {

		System.out.println("test");
		HelloExample obj = new HelloExample();

		int j = 200;
		for (int i = 100; i < 154; i++, j++) {
			try {
				obj.runMe(i, j);
			} catch (Exception exp) {
				logger.error(exp.getMessage(), exp);
			}

		}

	}
	
	private int add(int val1 , int val2 ) {
		logger.info("Method Add Val1 -->" + val1 + "<-- Val2 -->" + val2 + "<--");
		int result = val1 + val2;
		logger.info("Method Add Val1 -->" + val1 + "<-- Val2 -->" + val2 + "<-- result -->" + result + "<--");
		
		return result;
	}
	
	private int multiply(int val1 , int val2 ) {
		logger.info("Method Multiply Val1 -->" + val1 + "<-- Val2 -->" + val2 + "<--");
		int result = val1 * val2;
		logger.info("Method Multiply Val1 -->" + val1 + "<-- Val2 -->" + val2 + "<-- result -->" + result + "<--");
		
		return result;
	}
	
	private int divide(int val1 , int val2 ) {
		logger.info("Method Divide Val1 -->" + val1 + "<-- Val2 -->" + val2 + "<--");
		int result = val1 / val2;
		logger.info("Method Divide Val1 -->" + val1 + "<-- Val2 -->" + val2 + "<-- result -->" + result + "<--");
		
		return result;
	}

	private int runMe(int parameter, int div) {
		logger.info("Method Entry - Parameter -->" + parameter + "<--");
		int result = 0;
		//div = 0;
		result = parameter / div;

		logger.info("before return - input-->" + parameter + "<-- div -->" + div + "<-- restult -->" + result + "<--");
		return result;
	}

}